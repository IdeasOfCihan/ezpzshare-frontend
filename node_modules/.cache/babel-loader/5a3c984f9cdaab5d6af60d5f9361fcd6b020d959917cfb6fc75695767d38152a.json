{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cihan\\\\ezpzshare-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Configure axios defaults\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Set up axios interceptor for auth token\n  useEffect(() => {\n    const token = localStorage.getItem('ezpzshare_token');\n    if (token) {\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    }\n\n    // Add response interceptor to handle token expiration\n    const responseInterceptor = axios.interceptors.response.add(response => response, error => {\n      var _error$response, _error$response2;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n        localStorage.removeItem('ezpzshare_token');\n        localStorage.removeItem('ezpzshare_user');\n        setUser(null);\n        delete axios.defaults.headers.common['Authorization'];\n        toast.error('Session expired. Please log in again.');\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n  }, []);\n\n  // Check for existing user on mount\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('ezpzshare_token');\n      const savedUser = localStorage.getItem('ezpzshare_user');\n      if (token && savedUser) {\n        try {\n          // Verify token is still valid by making a test request\n          await axios.get('/api/folders');\n          setUser(JSON.parse(savedUser));\n        } catch (error) {\n          // Token is invalid, clear storage\n          localStorage.removeItem('ezpzshare_token');\n          localStorage.removeItem('ezpzshare_user');\n          delete axios.defaults.headers.common['Authorization'];\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('ezpzshare_token', token);\n      localStorage.setItem('ezpzshare_user', JSON.stringify(userData));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userData);\n      toast.success(`Welcome back, ${userData.name}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await axios.post('/api/auth/register', {\n        name,\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('ezpzshare_token', token);\n      localStorage.setItem('ezpzshare_user', JSON.stringify(userData));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(userData);\n      toast.success(`Welcome to EzPzShare, ${userData.name}!`);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('ezpzshare_token');\n    localStorage.removeItem('ezpzshare_user');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully');\n  };\n  const value = {\n    user,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","AuthContext","defaults","baseURL","process","env","REACT_APP_API_URL","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","headers","common","responseInterceptor","interceptors","response","add","error","_error$response","_error$response2","status","removeItem","Promise","reject","eject","initAuth","savedUser","get","JSON","parse","login","email","password","post","userData","data","setItem","stringify","success","name","_error$response3","_error$response3$data","message","register","_error$response4","_error$response4$data","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cihan/ezpzshare-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// Configure axios defaults\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Set up axios interceptor for auth token\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('ezpzshare_token');\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    // Add response interceptor to handle token expiration\r\n    const responseInterceptor = axios.interceptors.response.add(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401 || error.response?.status === 403) {\r\n          localStorage.removeItem('ezpzshare_token');\r\n          localStorage.removeItem('ezpzshare_user');\r\n          setUser(null);\r\n          delete axios.defaults.headers.common['Authorization'];\r\n          toast.error('Session expired. Please log in again.');\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      axios.interceptors.response.eject(responseInterceptor);\r\n    };\r\n  }, []);\r\n\r\n  // Check for existing user on mount\r\n  useEffect(() => {\r\n    const initAuth = async () => {\r\n      const token = localStorage.getItem('ezpzshare_token');\r\n      const savedUser = localStorage.getItem('ezpzshare_user');\r\n      \r\n      if (token && savedUser) {\r\n        try {\r\n          // Verify token is still valid by making a test request\r\n          await axios.get('/api/folders');\r\n          setUser(JSON.parse(savedUser));\r\n        } catch (error) {\r\n          // Token is invalid, clear storage\r\n          localStorage.removeItem('ezpzshare_token');\r\n          localStorage.removeItem('ezpzshare_user');\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    initAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/login', { email, password });\r\n      const { token, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('ezpzshare_token', token);\r\n      localStorage.setItem('ezpzshare_user', JSON.stringify(userData));\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(userData);\r\n      toast.success(`Welcome back, ${userData.name}!`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (name, email, password) => {\r\n    try {\r\n      const response = await axios.post('/api/auth/register', { name, email, password });\r\n      const { token, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('ezpzshare_token', token);\r\n      localStorage.setItem('ezpzshare_user', JSON.stringify(userData));\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      setUser(userData);\r\n      toast.success(`Welcome to EzPzShare, ${userData.name}!`);\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('ezpzshare_token');\r\n    localStorage.removeItem('ezpzshare_user');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}